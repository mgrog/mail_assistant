datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model email_training {
  id              Int     @id @default(autoincrement())
  user_email      String  @db.VarChar
  email_id        String  @unique @db.VarChar
  from            String  @db.VarChar
  subject         String  @db.VarChar
  body            String
  ai_answer       String  @db.VarChar
  confidence      Float   @db.Real
  heuristics_used Boolean @default(false)
}

model processed_daily_summary {
  id         Int      @id @default(autoincrement())
  user_id    Int
  created_at DateTime @default(now()) @db.Timestamptz(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([user_id])
}

model processed_email {
  id             String   @id @db.VarChar
  user_id        Int
  processed_at   DateTime @default(now()) @db.Timestamptz(6)
  category       String   @db.VarChar
  labels_applied String[] @default([])
  labels_removed String[] @default([])
  ai_answer      String   @db.VarChar
  user           user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([user_id])
  @@index([user_id, category])
}

model user_account_access {
  id            Int      @id @default(autoincrement())
  access_token  String   @db.VarChar
  refresh_token String   @db.VarChar
  expires_at    DateTime @db.Timestamptz(6)
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)
  user_email    String   @unique @db.VarChar
  user          user     @relation(fields: [user_email], references: [email], onDelete: Cascade)
}

model user_token_usage_stat {
  id              Int      @id @default(autoincrement())
  date            DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  month           Int      @default(dbgenerated("EXTRACT(MONTH FROM CURRENT_DATE)"))
  year            Int      @default(dbgenerated("EXTRACT(YEAR FROM CURRENT_DATE)"))
  tokens_consumed BigInt   @default(0)
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  updated_at      DateTime @default(now()) @db.Timestamptz(6)
  user_email      String   @db.VarChar
  user            user     @relation(fields: [user_email], references: [email], onDelete: Cascade)

  @@unique([date, user_email])
  @@index([date])
  @@index([user_email])
  @@index([user_email, month, year])
}

enum subscription_status {
  ACTIVE
  CANCELLED
  PAST_DUE
  UNPAID
}

model user {
  id                           Int                           @id @default(autoincrement())
  email                        String                        @unique @db.VarChar
  subscription_status          subscription_status           @default(UNPAID)
  last_successful_payment_at   DateTime?                     @db.Timestamptz(6)
  last_payment_attempt_at      DateTime?                     @db.Timestamptz(6)
  created_at                   DateTime                      @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime                      @default(now()) @db.Timestamptz(6)
  processed_daily_summaries    processed_daily_summary[]
  processed_emails             processed_email[]
  user_token_usage_stats       user_token_usage_stat[]
  default_email_rule_overrides default_email_rule_override[]
  custom_email_rules           custom_email_rule[]
  auto_cleanup_settings        auto_cleanup_setting[]
  user_account_access          user_account_access?
}

enum AssociatedEmailClientCategory {
  CATEGORY_PERSONAL
  CATEGORY_SOCIAL
  CATEGORY_PROMOTIONS
  CATEGORY_UPDATES
}

enum cleanup_action {
  DELETE
  ARCHIVE
  NOTHING
}

model auto_cleanup_setting {
  id             Int            @id @default(autoincrement())
  user_id        Int
  category       String         @db.VarChar
  is_disabled    Boolean        @default(false)
  after_days_old Int            @default(7)
  cleanup_action cleanup_action @default(NOTHING)
  created_at     DateTime       @default(now()) @db.Timestamptz(6)
  updated_at     DateTime       @default(now()) @db.Timestamptz(6)

  user user @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([category, user_id])
  @@index([user_id])
}

model default_email_rule_override {
  id                               Int                            @id @default(autoincrement())
  user_id                          Int
  category                         String                         @db.VarChar
  associated_email_client_category AssociatedEmailClientCategory?
  is_disabled                      Boolean                        @default(false)
  created_at                       DateTime                       @default(now()) @db.Timestamptz(6)
  updated_at                       DateTime                       @default(now()) @db.Timestamptz(6)

  user user @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([category, user_id])
  @@index([user_id])
  @@index([user_id, updated_at(sort: Desc)])
}

model custom_email_rule {
  id                               Int                            @id @default(autoincrement())
  user_id                          Int
  prompt_content                   String
  category                         String                         @db.VarChar
  associated_email_client_category AssociatedEmailClientCategory?
  created_at                       DateTime                       @default(now()) @db.Timestamptz(6)
  updated_at                       DateTime                       @default(now()) @db.Timestamptz(6)

  user user @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([user_id])
  @@index([user_id, updated_at(sort: Desc)])
}
